
    @Override
    public void onMapReady(GoogleMap googleMap) {
        mMap = googleMap;
        mMap.addMarker(new MarkerOptions().position(home).title("This is home"));
        //mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(home, 15));

        Location currentLocation = LocationServices.FusedLocationApi.getLastLocation(mGoogleApiClient);
        if (currentLocation == null)
            Toast.makeText(this, "Couldnt get the current location ..!", Toast.LENGTH_SHORT).show();
        else
        {
            LatLng latLng_current = new LatLng(currentLocation.getLatitude(),currentLocation.getLongitude());
            CameraUpdate update_current = CameraUpdateFactory.newLatLngZoom(latLng_current,15);
            mMap.moveCamera(update_current);
        }


        if (ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
            // TODO: Consider calling
            //    ActivityCompat#requestPermissions
            // here to request the missing permissions, and then overriding
            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
            //                                          int[] grantResults)
            // to handle the case where the user grants the permission. See the documentation
            // for ActivityCompat#requestPermissions for more details.
            return;
        }
        mMap.setMyLocationEnabled(true);

        CircleOptions circleopt = new CircleOptions()
                .strokeWidth(3)
                .fillColor(0x330000ff)
                .strokeColor(Color.BLUE)
                .center(home)
                .radius(100);
        shape = mMap.addCircle(circleopt);




    }

    @Override
    public void onConnected(@Nullable Bundle bundle) {

//        final float[] results = new float[1];
//        if (ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
//            // TODO: Consider calling
//            //    ActivityCompat#requestPermissions
//            // here to request the missing permissions, and then overriding
//            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
//            //                                          int[] grantResults)
//            // to handle the case where the user grants the permission. See the documentation
//            // for ActivityCompat#requestPermissions for more details.
//            return;
//        }
//        Location mLastLocation = LocationServices.FusedLocationApi.getLastLocation(
//                mGoogleApiClient);
//        if (mLastLocation != null) {
//
//            Location.distanceBetween(Home_lat, Home_long,
//                    mLastLocation.getLatitude(), mLastLocation.getLongitude(), results);
//            String str = Float.toString(results[0]/100);
//            Toast.makeText(MapsActivity.this,"The distance is "+str,Toast.LENGTH_SHORT).show();
//
//            if(results[0]>10)
//                Toast.makeText(MapsActivity.this, "Saftey Breach",Toast.LENGTH_SHORT).show();
//
//
////            mLastLocation.getLatitude()
////            mLastLocation.getLongitude()
//            LatLng latLng = new LatLng(mLastLocation.getLatitude(), mLastLocation.getLongitude());
//            CameraUpdate cameraUpdate = CameraUpdateFactory.newLatLngZoom(latLng, 10);
//            mMap.moveCamera(cameraUpdate);
//        }
        //showCurrentLocation();


    }

    @Override
    public void onConnectionSuspended(int i) {

    }

    @Override
    public void onConnectionFailed(@NonNull ConnectionResult connectionResult) {

    }

    @Override
    public void onLocationChanged(Location location) {
        if (ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
            // TODO: Consider calling
            //    ActivityCompat#requestPermissions
            // here to request the missing permissions, and then overriding
            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
            //                                          int[] grantResults)
            // to handle the case where the user grants the permission. See the documentation
            // for ActivityCompat#requestPermissions for more details.
            return;
        }
        LatLng latLng = new LatLng(location.getLatitude(), location.getLongitude());
        CameraUpdate cameraUpdate = CameraUpdateFactory.newLatLngZoom(latLng, 10);
        mMap.animateCamera(cameraUpdate);
        Toast.makeText(this, "The location changed are:" + location.getLatitude() + " and" + location.getLongitude(), Toast.LENGTH_SHORT).show();
    }

/*    public void showCurrentLocation() {
        if (ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
            // TODO: Consider calling
            //    ActivityCompat#requestPermissions
            // here to request the missing permissions, and then overriding
            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
            //                                          int[] grantResults)
            // to handle the case where the user grants the permission. See the documentation
            // for ActivityCompat#requestPermissions for more details.
            return;
        }
        Location currentLocation = LocationServices.FusedLocationApi.getLastLocation(mGoogleApiClient);
        if (currentLocation == null)
            Toast.makeText(this, "Couldnt get the current location ..!", Toast.LENGTH_SHORT).show();
        else
        {
            LatLng latLng_current = new LatLng(currentLocation.getLatitude(),currentLocation.getLongitude());
            CameraUpdate update_current = CameraUpdateFactory.newLatLngZoom(latLng_current,15);
            mMap.animateCamera(update_current);
        }



    }*/